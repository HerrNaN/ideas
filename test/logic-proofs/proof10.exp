{
   "result": [
      [
         "logic.propositional.defequiv",
         [
         ],
         "~((p -> q) -> ~(q -> p)) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.defimpl",
         [
         ],
         "~(~(p -> q) || ~(q -> p)) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.defimpl",
         [
         ],
         "~(~(~p || q) || ~(q -> p)) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.defimpl",
         [
         ],
         "~(~(~p || q) || ~(~q || p)) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.demorganor",
         [
         ],
         "~~(~p || q) /\\ ~~(~q || p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.notnot",
         [
         ],
         "(~p || q) /\\ ~~(~q || p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.notnot",
         [
         ],
         "(~p || q) /\\ (~q || p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.andoveror",
         [
         ],
         "((~p || q) /\\ ~q) || ((~p || q) /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.andoveror",
         [
         ],
         "(~p /\\ ~q) || (q /\\ ~q) || ((~p || q) /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.andoveror",
         [
         ],
         "(~p /\\ ~q) || (q /\\ ~q) || (~p /\\ p) || (q /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.compland",
         [
         ],
         "(~p /\\ ~q) || F || (~p /\\ p) || (q /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.compland",
         [
         ],
         "(~p /\\ ~q) || F || F || (q /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.falsezeroor",
         [
         ],
         "(~p /\\ ~q) || F || (q /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "logic.propositional.falsezeroor",
         [
         ],
         "(~p /\\ ~q) || (q /\\ p) == (p /\\ q) || (~p /\\ ~q)"
      ],
      [
         "top-is-or",
         [
         ],
         "~p /\\ ~q == ~p /\\ ~q, q /\\ p == p /\\ q"
      ],
      [
         "top-is-and",
         [
         ],
         "~p == ~p, ~q == ~q, q /\\ p == p /\\ q"
      ],
      [
         "top-is-and",
         [
         ],
         "~p == ~p, ~q == ~q, q == q, p == p"
      ],
      [
         "top-is-not",
         [
         ],
         "p == p, ~q == ~q, q == q, p == p"
      ],
      [
         "top-is-not",
         [
         ],
         "p == p, q == q, q == q, p == p"
      ]
   ],
   "error": null,
   "id": 42,
   "version": "1.0.9 (0)"
}
